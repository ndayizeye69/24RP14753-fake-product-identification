{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TUMBA-COLLEGE\\\\Desktop\\\\fake product idetification\\\\src\\\\components\\\\CustomerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { ethers } from 'ethers';\nimport ProductVerification from '../artifacts/contracts/ProductVerification.sol/ProductVerification.json';\nimport jsQR from 'jsqr';\nimport './CustomerPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerPage() {\n  _s();\n  const [productId, setProductId] = useState('');\n  const [verificationResult, setVerificationResult] = useState(null);\n  const [productDetails, setProductDetails] = useState(null);\n  const [status, setStatus] = useState('');\n  const fileInputRef = useRef(null);\n  const handleQRCodeUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const image = new Image();\n      image.src = URL.createObjectURL(file);\n      image.onload = () => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        context.drawImage(image, 0, 0);\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        const code = jsQR(imageData.data, imageData.width, imageData.height);\n        if (code) {\n          try {\n            const qrData = JSON.parse(code.data);\n            if (qrData.productId) {\n              setProductId(qrData.productId);\n              setStatus('QR Code scanned successfully!');\n            } else {\n              setStatus('Invalid QR code format - missing product ID');\n            }\n          } catch (error) {\n            // If parsing fails, try using the raw data as product ID\n            setProductId(code.data);\n            setStatus('QR Code scanned successfully!');\n          }\n        } else {\n          setStatus('No QR code found in the image.');\n        }\n        URL.revokeObjectURL(image.src);\n      };\n    } catch (error) {\n      setStatus(`Error scanning QR code: ${error.message}`);\n    }\n  };\n  const handleVerification = async e => {\n    e.preventDefault();\n    setVerificationResult(null);\n    setProductDetails(null);\n    setStatus('');\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to use this feature');\n      }\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract('0x5fbdb2315678afecb367f032d93f642f64180aa3', ProductVerification.abi, signer);\n      try {\n        const isAuthentic = await contract.verifyProduct(productId);\n        if (isAuthentic) {\n          const details = await contract.getProductDetails(productId);\n          setVerificationResult(true);\n          setProductDetails({\n            name: details.name,\n            manufacturer: details.manufacturer,\n            productionDate: new Date(Number(details.productionDate) * 1000).toLocaleDateString(),\n            isVerified: true\n          });\n          setStatus('Product verification successful!');\n        } else {\n          setVerificationResult(false);\n          setProductDetails(null);\n          setStatus('Product verification failed - potentially counterfeit product');\n        }\n      } catch (error) {\n        if (error.message.includes('Product does not exist')) {\n          setVerificationResult(false);\n          setProductDetails(null);\n          setStatus('Product not found in the system');\n        } else {\n          setVerificationResult(null);\n          setProductDetails(null);\n          setStatus(`Error during verification: ${error.message}`);\n        }\n      }\n    } catch (error) {\n      setStatus(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customer-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Product Authenticity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerification,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Product ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: productId,\n          onChange: e => setProductId(e.target.value),\n          placeholder: \"Enter product ID or scan QR code\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qr-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"qr-upload\",\n            className: \"qr-upload-label\",\n            children: \"Upload QR Code Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"qr-upload\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleQRCodeUpload,\n            ref: fileInputRef,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 18\n    }, this), verificationResult !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verification-result\",\n      children: verificationResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"authentic\",\n          children: \"Product is authentic! \\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), productDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Product Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 22\n            }, this), \" \", productDetails.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Manufacturer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 22\n            }, this), \" \", productDetails.manufacturer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Production Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 22\n            }, this), \" \", productDetails.productionDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"fake\",\n        children: \"Product not found \\u2013 possibly fake! \\u26A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomerPage, \"S6CWmYm2wyEbhPtp+6nBC6mFFQA=\");\n_c = CustomerPage;\nexport default CustomerPage;\nvar _c;\n$RefreshReg$(_c, \"CustomerPage\");","map":{"version":3,"names":["React","useState","useRef","ethers","ProductVerification","jsQR","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerPage","_s","productId","setProductId","verificationResult","setVerificationResult","productDetails","setProductDetails","status","setStatus","fileInputRef","handleQRCodeUpload","e","file","target","files","image","Image","src","URL","createObjectURL","onload","canvas","document","createElement","context","getContext","width","height","drawImage","imageData","getImageData","code","data","qrData","JSON","parse","error","revokeObjectURL","message","handleVerification","preventDefault","window","ethereum","Error","request","method","provider","BrowserProvider","signer","getSigner","contract","Contract","abi","isAuthentic","verifyProduct","details","getProductDetails","name","manufacturer","productionDate","Date","Number","toLocaleDateString","isVerified","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","placeholder","required","htmlFor","id","accept","ref","style","display","_c","$RefreshReg$"],"sources":["C:/Users/TUMBA-COLLEGE/Desktop/fake product idetification/src/components/CustomerPage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport ProductVerification from '../artifacts/contracts/ProductVerification.sol/ProductVerification.json';\r\nimport jsQR from 'jsqr';\r\nimport './CustomerPage.css';\r\n\r\nfunction CustomerPage() {\r\n  const [productId, setProductId] = useState('');\r\n  const [verificationResult, setVerificationResult] = useState(null);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleQRCodeUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const image = new Image();\r\n      image.src = URL.createObjectURL(file);\r\n\r\n      image.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n        context.drawImage(image, 0, 0);\r\n\r\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n        const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n\r\n        if (code) {\r\n          try {\r\n            const qrData = JSON.parse(code.data);\r\n            if (qrData.productId) {\r\n              setProductId(qrData.productId);\r\n              setStatus('QR Code scanned successfully!');\r\n            } else {\r\n              setStatus('Invalid QR code format - missing product ID');\r\n            }\r\n          } catch (error) {\r\n            // If parsing fails, try using the raw data as product ID\r\n            setProductId(code.data);\r\n            setStatus('QR Code scanned successfully!');\r\n          }\r\n        } else {\r\n          setStatus('No QR code found in the image.');\r\n        }\r\n\r\n        URL.revokeObjectURL(image.src);\r\n      };\r\n    } catch (error) {\r\n      setStatus(`Error scanning QR code: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleVerification = async (e) => {\r\n    e.preventDefault();\r\n    setVerificationResult(null);\r\n    setProductDetails(null);\r\n    setStatus('');\r\n\r\n    try {\r\n      if (!window.ethereum) {\r\n        throw new Error('Please install MetaMask to use this feature');\r\n      }\r\n\r\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const signer = await provider.getSigner();\r\n\r\n      const contract = new ethers.Contract(\r\n        '0x5fbdb2315678afecb367f032d93f642f64180aa3',\r\n        ProductVerification.abi,\r\n        signer\r\n      );\r\n\r\n      try {\r\n        const isAuthentic = await contract.verifyProduct(productId);\r\n        if (isAuthentic) {\r\n          const details = await contract.getProductDetails(productId);\r\n          setVerificationResult(true);\r\n          setProductDetails({\r\n            name: details.name,\r\n            manufacturer: details.manufacturer,\r\n            productionDate: new Date(Number(details.productionDate) * 1000).toLocaleDateString(),\r\n            isVerified: true\r\n          });\r\n          setStatus('Product verification successful!');\r\n        } else {\r\n          setVerificationResult(false);\r\n          setProductDetails(null);\r\n          setStatus('Product verification failed - potentially counterfeit product');\r\n        }\r\n      } catch (error) {\r\n        if (error.message.includes('Product does not exist')) {\r\n          setVerificationResult(false);\r\n          setProductDetails(null);\r\n          setStatus('Product not found in the system');\r\n        } else {\r\n          setVerificationResult(null);\r\n          setProductDetails(null);\r\n          setStatus(`Error during verification: ${error.message}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setStatus(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"customer-page\">\r\n      <h2>Verify Product Authenticity</h2>\r\n      <form onSubmit={handleVerification}>\r\n        <div>\r\n          <label>Enter Product ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={productId}\r\n            onChange={(e) => setProductId(e.target.value)}\r\n            placeholder=\"Enter product ID or scan QR code\"\r\n            required\r\n          />\r\n          <div className=\"qr-upload\">\r\n            <label htmlFor=\"qr-upload\" className=\"qr-upload-label\">\r\n              Upload QR Code Image\r\n            </label>\r\n            <input\r\n              id=\"qr-upload\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleQRCodeUpload}\r\n              ref={fileInputRef}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">Verify Product</button>\r\n      </form>\r\n\r\n      {status && <p className=\"status-message\">{status}</p>}\r\n\r\n      {verificationResult !== null && (\r\n        <div className=\"verification-result\">\r\n          {verificationResult ? (\r\n            <>\r\n              <h3 className=\"authentic\">Product is authentic! ✓</h3>\r\n              {productDetails && (\r\n                <div className=\"product-details\">\r\n                  <h4>Product Details:</h4>\r\n                  <p><strong>Name:</strong> {productDetails.name}</p>\r\n                  <p><strong>Manufacturer:</strong> {productDetails.manufacturer}</p>\r\n                  <p><strong>Production Date:</strong> {productDetails.productionDate}</p>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <h3 className=\"fake\">Product not found – possibly fake! ⚠</h3>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}