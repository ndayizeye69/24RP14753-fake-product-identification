{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TUMBA-COLLEGE\\\\Desktop\\\\fake product idetification\\\\src\\\\components\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport QRCode from 'qrcode.react';\nimport ProductVerification from '../artifacts/contracts/ProductVerification.sol/ProductVerification.json';\nimport './AdminPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [password, setPassword] = useState('');\n  const [formData, setFormData] = useState({\n    productId: '',\n    name: '',\n    manufacturer: '',\n    productionDate: ''\n  });\n  const [qrCode, setQrCode] = useState('');\n  const [status, setStatus] = useState('');\n  const [products, setProducts] = useState([]);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isContractReady, setIsContractReady] = useState(false);\n  const [currentAddress, setCurrentAddress] = useState('');\n  const [isOwner, setIsOwner] = useState(false);\n  const handlePasswordSubmit = e => {\n    e.preventDefault();\n    // In a real application, this should be a secure password and properly hashed\n    const correctPassword = 'admin123';\n    if (password === correctPassword) {\n      setIsAuthenticated(true);\n      setStatus('');\n    } else {\n      setStatus('Incorrect password');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  useEffect(() => {\n    const initializeEthers = async () => {\n      if (window.ethereum && isAuthenticated) {\n        setIsLoading(true);\n        try {\n          // Request account access\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const network = await provider.getNetwork();\n          const chainId = Number(network.chainId);\n\n          // Check if we're on the correct network (Hardhat's default is 1337)\n          if (chainId !== 1337) {\n            try {\n              await window.ethereum.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{\n                  chainId: '0x539'\n                }] // 1337 in hex\n              });\n            } catch (switchError) {\n              // This error code indicates that the chain has not been added to MetaMask\n              if (switchError.code === 4902) {\n                try {\n                  await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [{\n                      chainId: '0x539',\n                      chainName: 'Hardhat Local Network',\n                      nativeCurrency: {\n                        name: 'ETH',\n                        symbol: 'ETH',\n                        decimals: 18\n                      },\n                      rpcUrls: ['http://localhost:8545'],\n                      blockExplorerUrls: null\n                    }]\n                  });\n                  // After adding the chain, retry switching to it\n                  await window.ethereum.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{\n                      chainId: '0x539'\n                    }]\n                  });\n                } catch (addError) {\n                  throw new Error('Failed to add Hardhat network: ' + addError.message);\n                }\n              } else {\n                throw new Error('Failed to switch to Hardhat network: ' + switchError.message);\n              }\n            }\n            // Refresh provider after network switch\n            provider = new ethers.BrowserProvider(window.ethereum);\n          }\n          const signer = await provider.getSigner();\n          const contractAddress = '0x5fbdb2315678afecb367f032d93f642f64180aa3';\n\n          // Verify contract is deployed\n          const code = await provider.getCode(contractAddress);\n          if (code === '0x') {\n            throw new Error('Contract not deployed at specified address');\n          }\n\n          // Initialize contract with verified ABI\n          if (!ProductVerification.abi || !Array.isArray(ProductVerification.abi)) {\n            throw new Error('Invalid contract ABI');\n          }\n          const contract = new ethers.Contract(contractAddress, ProductVerification.abi, signer);\n\n          // Verify contract methods\n          const requiredMethods = ['registerProduct', 'updateProduct', 'deleteProduct', 'getAllProducts'];\n          for (const method of requiredMethods) {\n            if (!ProductVerification.abi.find(item => item.name === method && item.type === 'function')) {\n              throw new Error(`Contract ABI missing ${method} function`);\n            }\n          }\n          // Add network change listener\n          window.ethereum.on('chainChanged', () => {\n            window.location.reload();\n          });\n\n          // Add account change listener\n          window.ethereum.on('accountsChanged', () => {\n            window.location.reload();\n          });\n\n          // Test contract connection and check ownership\n          try {\n            await contract.getAllProducts();\n            const signerAddress = await signer.getAddress();\n            const ownerAddress = await contract.owner();\n            setCurrentAddress(signerAddress);\n            setIsOwner(signerAddress.toLowerCase() === ownerAddress.toLowerCase());\n          } catch (error) {\n            throw new Error('Failed to connect to contract: ' + error.message);\n          }\n          setProvider(provider);\n          setSigner(signer);\n          setContract(contract);\n          setIsContractReady(true);\n          await loadProducts(contract);\n        } catch (error) {\n          setStatus(`Error initializing: ${error.message}`);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    initializeEthers();\n  }, [isAuthenticated]);\n  const loadProducts = async contractInstance => {\n    try {\n      const [productIds, productDetails] = await contractInstance.getAllProducts();\n      const formattedProducts = productIds.map((id, index) => ({\n        id,\n        name: productDetails[index].name,\n        manufacturer: productDetails[index].manufacturer,\n        productionDate: new Date(Number(productDetails[index].productionDate) * 1000).toLocaleDateString(),\n        exists: productDetails[index].exists\n      })).filter(product => product.exists && product.name && product.manufacturer).filter(product => product.exists);\n      setProducts(formattedProducts);\n    } catch (error) {\n      setStatus(`Error loading products: ${error.message}`);\n    }\n  };\n  const handleDelete = async productId => {\n    try {\n      const tx = await contract.deleteProduct(productId);\n      await tx.wait();\n      await loadProducts(contract);\n      setStatus('Product deleted successfully!');\n    } catch (error) {\n      setStatus(`Error deleting product: ${error.message}`);\n    }\n  };\n  const handleEdit = product => {\n    setEditingProduct(product);\n    setFormData({\n      productId: product.id,\n      name: product.name,\n      manufacturer: product.manufacturer,\n      productionDate: new Date(product.productionDate).toISOString().split('T')[0]\n    });\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\n      const tx = await contract.updateProduct(formData.productId, formData.name, formData.manufacturer, timestamp);\n      await tx.wait();\n      setEditingProduct(null);\n      await loadProducts(contract);\n      setStatus('Product updated successfully!');\n      setFormData({\n        productId: '',\n        name: '',\n        manufacturer: '',\n        productionDate: ''\n      });\n    } catch (error) {\n      setStatus(`Error updating product: ${error.message}`);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus('');\n    setIsLoading(true);\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to use this feature');\n      }\n      if (!contract) {\n        throw new Error('Contract not initialized');\n      }\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\n      setStatus('Registering product...');\n      const tx = await contract.registerProduct(formData.productId, formData.name, formData.manufacturer, timestamp);\n      setStatus('Waiting for transaction confirmation...');\n      const receipt = await tx.wait();\n      if (receipt.status === 1) {\n        const qrCodeData = JSON.stringify({\n          productId: formData.productId,\n          name: formData.name,\n          manufacturer: formData.manufacturer,\n          productionDate: formData.productionDate\n        });\n        setQrCode(qrCodeData);\n        setStatus('Loading updated product list...');\n        await loadProducts(contract);\n        setStatus('Product registered successfully!');\n        setFormData({\n          productId: '',\n          name: '',\n          manufacturer: '',\n          productionDate: ''\n        });\n      } else {\n        throw new Error('Transaction failed');\n      }\n    } catch (error) {\n      // Extract the revert reason from the error\n      const errorMessage = error.message.includes('Product ID already exists') ? 'A product with this ID already exists. Please use a different Product ID.' : `Error: ${error.message}`;\n      setStatus(errorMessage);\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePasswordSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register New Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), !isContractReady ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to register products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message loading-message\",\n        children: \"Processing transaction...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editingProduct ? handleUpdate : handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"productId\",\n              value: formData.productId,\n              onChange: handleInputChange,\n              required: true,\n              disabled: editingProduct || !isContractReady\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Manufacturer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"manufacturer\",\n              value: formData.manufacturer,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Production Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"productionDate\",\n              value: formData.productionDate,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isContractReady,\n            children: editingProduct ? 'Update Product' : 'Register Product'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 16\n    }, this), qrCode && !editingProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-code-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrCode,\n        size: 256,\n        level: \"H\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-details\",\n        children: (() => {\n          const details = JSON.parse(qrCode);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Product ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 22\n              }, this), \" \", details.productId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 22\n              }, this), \" \", details.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Manufacturer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 22\n              }, this), \" \", details.manufacturer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Production Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 22\n              }, this), \" \", details.productionDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const qrCodeCanvas = document.querySelector('.qr-code-section canvas');\n          const qrCodeUrl = qrCodeCanvas.toDataURL('image/png');\n          const printWindow = window.open('', '_blank');\n          const details = JSON.parse(qrCode);\n          printWindow.document.write(`\n              <html>\n                <head>\n                  <title>Product QR Code</title>\n                  <style>\n                    body { \n                      display: flex; \n                      flex-direction: column; \n                      align-items: center; \n                      justify-content: center; \n                      min-height: 100vh;\n                      margin: 0;\n                      padding: 20px;\n                      font-family: Arial, sans-serif;\n                    }\n                    .print-container { \n                      text-align: center;\n                      background: white;\n                      padding: 20px;\n                      border-radius: 8px;\n                      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n                    }\n                    .qr-code-image {\n                      width: 256px;\n                      height: 256px;\n                      margin: 20px 0;\n                    }\n                    .product-details {\n                      margin-top: 20px;\n                      text-align: left;\n                      width: 100%;\n                      max-width: 300px;\n                    }\n                    .product-details p {\n                      margin: 8px 0;\n                      line-height: 1.5;\n                    }\n                    @media print {\n                      body { \n                        -webkit-print-color-adjust: exact;\n                        background: white;\n                      }\n                      .print-container {\n                        box-shadow: none;\n                      }\n                    }\n                  </style>\n                </head>\n                <body>\n                  <div class=\"print-container\">\n                    <h2>Product QR Code</h2>\n                    <img src=\"${qrCodeUrl}\" alt=\"Product QR Code\" class=\"qr-code-image\"/>\n                    <div class=\"product-details\">\n                      <p><strong>Product ID:</strong> ${details.productId}</p>\n                      <p><strong>Name:</strong> ${details.name}</p>\n                      <p><strong>Manufacturer:</strong> ${details.manufacturer}</p>\n                      <p><strong>Production Date:</strong> ${details.productionDate}</p>\n                    </div>\n                  </div>\n                  <script>\n                    window.onload = () => {\n                      window.print();\n                    };\n                  </script>\n                  <div class=\"print-container\">\n                    <h2>Product QR Code</h2>\n                    <img src=\"${qrCodeUrl}\" alt=\"Product QR Code\" />\n                    <div class=\"product-details\">\n                      <p><strong>Product ID:</strong> ${details.productId}</p>\n                      <p><strong>Name:</strong> ${details.name}</p>\n                      <p><strong>Manufacturer:</strong> ${details.manufacturer}</p>\n                      <p><strong>Production Date:</strong> ${details.productionDate}</p>\n                    </div>\n                  </div>\n                </body>\n              </html>\n            `);\n          setTimeout(() => {\n            printWindow.print();\n            printWindow.close();\n          }, 500);\n        },\n        children: \"Print QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this), products.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registered Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"products-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Manufacturer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Production Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.manufacturer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.productionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(product),\n                className: \"action-btn edit-btn\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(product.id),\n                className: \"action-btn delete-btn\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 19\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"N9rBszDZsOhNQyN/xRuM8OmZM5o=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","ethers","QRCode","ProductVerification","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","isAuthenticated","setIsAuthenticated","password","setPassword","formData","setFormData","productId","name","manufacturer","productionDate","qrCode","setQrCode","status","setStatus","products","setProducts","editingProduct","setEditingProduct","contract","setContract","provider","setProvider","signer","setSigner","isLoading","setIsLoading","isContractReady","setIsContractReady","currentAddress","setCurrentAddress","isOwner","setIsOwner","handlePasswordSubmit","e","preventDefault","correctPassword","handleInputChange","value","target","prevState","initializeEthers","window","ethereum","request","method","BrowserProvider","network","getNetwork","chainId","Number","params","switchError","code","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","addError","Error","message","getSigner","contractAddress","getCode","abi","Array","isArray","Contract","requiredMethods","find","item","type","on","location","reload","getAllProducts","signerAddress","getAddress","ownerAddress","owner","toLowerCase","error","loadProducts","contractInstance","productIds","productDetails","formattedProducts","map","id","index","Date","toLocaleDateString","exists","filter","product","handleDelete","tx","deleteProduct","wait","handleEdit","toISOString","split","handleUpdate","timestamp","Math","floor","getTime","updateProduct","handleSubmit","registerProduct","receipt","qrCodeData","JSON","stringify","errorMessage","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","disabled","size","level","details","parse","onClick","qrCodeCanvas","document","querySelector","qrCodeUrl","toDataURL","printWindow","open","write","setTimeout","print","close","length","_c","$RefreshReg$"],"sources":["C:/Users/TUMBA-COLLEGE/Desktop/fake product idetification/src/components/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport QRCode from 'qrcode.react';\r\nimport ProductVerification from '../artifacts/contracts/ProductVerification.sol/ProductVerification.json';\r\nimport './AdminPage.css';\r\n\r\nfunction AdminPage() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    productId: '',\r\n    name: '',\r\n    manufacturer: '',\r\n    productionDate: ''\r\n  });\r\n  const [qrCode, setQrCode] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n  const [isContractReady, setIsContractReady] = useState(false);\r\n  const [currentAddress, setCurrentAddress] = useState('');\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  const handlePasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    // In a real application, this should be a secure password and properly hashed\r\n    const correctPassword = 'admin123';\r\n    if (password === correctPassword) {\r\n      setIsAuthenticated(true);\r\n      setStatus('');\r\n    } else {\r\n      setStatus('Incorrect password');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeEthers = async () => {\r\n      if (window.ethereum && isAuthenticated) {\r\n        setIsLoading(true);\r\n        try {\r\n          // Request account access\r\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n          const provider = new ethers.BrowserProvider(window.ethereum);\r\n          const network = await provider.getNetwork();\r\n          const chainId = Number(network.chainId);\r\n          \r\n          // Check if we're on the correct network (Hardhat's default is 1337)\r\n          if (chainId !== 1337) {\r\n            try {\r\n              await window.ethereum.request({\r\n                method: 'wallet_switchEthereumChain',\r\n                params: [{ chainId: '0x539' }] // 1337 in hex\r\n              });\r\n            } catch (switchError) {\r\n              // This error code indicates that the chain has not been added to MetaMask\r\n              if (switchError.code === 4902) {\r\n                try {\r\n                  await window.ethereum.request({\r\n                    method: 'wallet_addEthereumChain',\r\n                    params: [{\r\n                      chainId: '0x539',\r\n                      chainName: 'Hardhat Local Network',\r\n                      nativeCurrency: {\r\n                        name: 'ETH',\r\n                        symbol: 'ETH',\r\n                        decimals: 18\r\n                      },\r\n                      rpcUrls: ['http://localhost:8545'],\r\n                      blockExplorerUrls: null\r\n                    }]\r\n                  });\r\n                  // After adding the chain, retry switching to it\r\n                  await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: '0x539' }]\r\n                  });\r\n                } catch (addError) {\r\n                  throw new Error('Failed to add Hardhat network: ' + addError.message);\r\n                }\r\n              } else {\r\n                throw new Error('Failed to switch to Hardhat network: ' + switchError.message);\r\n              }\r\n            }\r\n            // Refresh provider after network switch\r\n            provider = new ethers.BrowserProvider(window.ethereum);\r\n          }\r\n          \r\n          const signer = await provider.getSigner();\r\n          const contractAddress = '0x5fbdb2315678afecb367f032d93f642f64180aa3';\r\n          \r\n          // Verify contract is deployed\r\n          const code = await provider.getCode(contractAddress);\r\n          if (code === '0x') {\r\n            throw new Error('Contract not deployed at specified address');\r\n          }\r\n          \r\n          // Initialize contract with verified ABI\r\n          if (!ProductVerification.abi || !Array.isArray(ProductVerification.abi)) {\r\n            throw new Error('Invalid contract ABI');\r\n          }\r\n          \r\n          const contract = new ethers.Contract(\r\n            contractAddress,\r\n            ProductVerification.abi,\r\n            signer\r\n          );\r\n          \r\n          // Verify contract methods\r\n          const requiredMethods = ['registerProduct', 'updateProduct', 'deleteProduct', 'getAllProducts'];\r\n          for (const method of requiredMethods) {\r\n            if (!ProductVerification.abi.find(item => item.name === method && item.type === 'function')) {\r\n              throw new Error(`Contract ABI missing ${method} function`);\r\n            }\r\n          }\r\n          // Add network change listener\r\n          window.ethereum.on('chainChanged', () => {\r\n            window.location.reload();\r\n          });\r\n\r\n          // Add account change listener\r\n          window.ethereum.on('accountsChanged', () => {\r\n            window.location.reload();\r\n          });\r\n\r\n          // Test contract connection and check ownership\r\n          try {\r\n            await contract.getAllProducts();\r\n            const signerAddress = await signer.getAddress();\r\n            const ownerAddress = await contract.owner();\r\n            setCurrentAddress(signerAddress);\r\n            setIsOwner(signerAddress.toLowerCase() === ownerAddress.toLowerCase());\r\n          } catch (error) {\r\n            throw new Error('Failed to connect to contract: ' + error.message);\r\n          }\r\n\r\n          setProvider(provider);\r\n          setSigner(signer);\r\n          setContract(contract);\r\n          setIsContractReady(true);\r\n          await loadProducts(contract);\r\n        } catch (error) {\r\n          setStatus(`Error initializing: ${error.message}`);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    initializeEthers();\r\n  }, [isAuthenticated]);\r\n\r\n  const loadProducts = async (contractInstance) => {\r\n    try {\r\n      const [productIds, productDetails] = await contractInstance.getAllProducts();\r\n      const formattedProducts = productIds\r\n        .map((id, index) => ({\r\n          id,\r\n          name: productDetails[index].name,\r\n          manufacturer: productDetails[index].manufacturer,\r\n          productionDate: new Date(Number(productDetails[index].productionDate) * 1000).toLocaleDateString(),\r\n          exists: productDetails[index].exists\r\n        }))\r\n        .filter(product => product.exists && product.name && product.manufacturer)\r\n        .filter(product => product.exists);\r\n      setProducts(formattedProducts);\r\n    } catch (error) {\r\n      setStatus(`Error loading products: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (productId) => {\r\n    try {\r\n      const tx = await contract.deleteProduct(productId);\r\n      await tx.wait();\r\n      await loadProducts(contract);\r\n      setStatus('Product deleted successfully!');\r\n    } catch (error) {\r\n      setStatus(`Error deleting product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (product) => {\r\n    setEditingProduct(product);\r\n    setFormData({\r\n      productId: product.id,\r\n      name: product.name,\r\n      manufacturer: product.manufacturer,\r\n      productionDate: new Date(product.productionDate).toISOString().split('T')[0]\r\n    });\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\r\n      const tx = await contract.updateProduct(\r\n        formData.productId,\r\n        formData.name,\r\n        formData.manufacturer,\r\n        timestamp\r\n      );\r\n      await tx.wait();\r\n      setEditingProduct(null);\r\n      await loadProducts(contract);\r\n      setStatus('Product updated successfully!');\r\n      setFormData({\r\n        productId: '',\r\n        name: '',\r\n        manufacturer: '',\r\n        productionDate: ''\r\n      });\r\n    } catch (error) {\r\n      setStatus(`Error updating product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus('');\r\n    setIsLoading(true);\r\n    try {\r\n      if (!window.ethereum) {\r\n        throw new Error('Please install MetaMask to use this feature');\r\n      }\r\n\r\n      if (!contract) {\r\n        throw new Error('Contract not initialized');\r\n      }\r\n\r\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\r\n      \r\n      setStatus('Registering product...');\r\n      const tx = await contract.registerProduct(\r\n        formData.productId,\r\n        formData.name,\r\n        formData.manufacturer,\r\n        timestamp\r\n      );\r\n\r\n      setStatus('Waiting for transaction confirmation...');\r\n      const receipt = await tx.wait();\r\n      \r\n      if (receipt.status === 1) {\r\n        const qrCodeData = JSON.stringify({\r\n          productId: formData.productId,\r\n          name: formData.name,\r\n          manufacturer: formData.manufacturer,\r\n          productionDate: formData.productionDate\r\n        });\r\n        setQrCode(qrCodeData);\r\n        setStatus('Loading updated product list...');\r\n        await loadProducts(contract);\r\n        setStatus('Product registered successfully!');\r\n        setFormData({\r\n          productId: '',\r\n          name: '',\r\n          manufacturer: '',\r\n          productionDate: ''\r\n        });\r\n      } else {\r\n        throw new Error('Transaction failed');\r\n      }\r\n    } catch (error) {\r\n      // Extract the revert reason from the error\r\n      const errorMessage = error.message.includes('Product ID already exists') \r\n        ? 'A product with this ID already exists. Please use a different Product ID.'\r\n        : `Error: ${error.message}`;\r\n      setStatus(errorMessage);\r\n    }\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"admin-page\">\r\n        <h2>Admin Authentication</h2>\r\n        <form onSubmit={handlePasswordSubmit}>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        {status && <p className=\"status-message\">{status}</p>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <h2>Register New Product</h2>\r\n      {!isContractReady ? (\r\n        <p>Please connect your wallet to register products</p>\r\n      ) : (\r\n        <div>\r\n          {isLoading && <p className=\"status-message loading-message\">Processing transaction...</p>}\r\n          {status && <p className=\"status-message\">{status}</p>}\r\n          <div className=\"product-form\">\r\n        <form onSubmit={editingProduct ? handleUpdate : handleSubmit}>\r\n          <div>\r\n            <label>Product ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"productId\"\r\n              value={formData.productId}\r\n              onChange={handleInputChange}\r\n              required\r\n              disabled={editingProduct || !isContractReady}\r\n            />\r\n          </div>\r\n        <div>\r\n          <label>Product Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Manufacturer:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"manufacturer\"\r\n            value={formData.manufacturer}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Production Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"productionDate\"\r\n            value={formData.productionDate}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={!isContractReady}>\r\n          {editingProduct ? 'Update Product' : 'Register Product'}\r\n        </button>\r\n      </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    {status && <p className=\"status-message\">{status}</p>}\r\n\r\n      {qrCode && !editingProduct && (\r\n        <div className=\"qr-code-section\">\r\n          <h3>Generated QR Code</h3>\r\n          <QRCode value={qrCode} size={256} level=\"H\" />\r\n          <div className=\"product-details\">\r\n            {(() => {\r\n              const details = JSON.parse(qrCode);\r\n              return (\r\n                <>\r\n                  <p><strong>Product ID:</strong> {details.productId}</p>\r\n                  <p><strong>Name:</strong> {details.name}</p>\r\n                  <p><strong>Manufacturer:</strong> {details.manufacturer}</p>\r\n                  <p><strong>Production Date:</strong> {details.productionDate}</p>\r\n                </>\r\n              );\r\n            })()}\r\n          </div>\r\n          <button onClick={() => {\r\n            const qrCodeCanvas = document.querySelector('.qr-code-section canvas');\r\n            const qrCodeUrl = qrCodeCanvas.toDataURL('image/png');\r\n            const printWindow = window.open('', '_blank');\r\n            const details = JSON.parse(qrCode);\r\n            printWindow.document.write(`\r\n              <html>\r\n                <head>\r\n                  <title>Product QR Code</title>\r\n                  <style>\r\n                    body { \r\n                      display: flex; \r\n                      flex-direction: column; \r\n                      align-items: center; \r\n                      justify-content: center; \r\n                      min-height: 100vh;\r\n                      margin: 0;\r\n                      padding: 20px;\r\n                      font-family: Arial, sans-serif;\r\n                    }\r\n                    .print-container { \r\n                      text-align: center;\r\n                      background: white;\r\n                      padding: 20px;\r\n                      border-radius: 8px;\r\n                      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n                    }\r\n                    .qr-code-image {\r\n                      width: 256px;\r\n                      height: 256px;\r\n                      margin: 20px 0;\r\n                    }\r\n                    .product-details {\r\n                      margin-top: 20px;\r\n                      text-align: left;\r\n                      width: 100%;\r\n                      max-width: 300px;\r\n                    }\r\n                    .product-details p {\r\n                      margin: 8px 0;\r\n                      line-height: 1.5;\r\n                    }\r\n                    @media print {\r\n                      body { \r\n                        -webkit-print-color-adjust: exact;\r\n                        background: white;\r\n                      }\r\n                      .print-container {\r\n                        box-shadow: none;\r\n                      }\r\n                    }\r\n                  </style>\r\n                </head>\r\n                <body>\r\n                  <div class=\"print-container\">\r\n                    <h2>Product QR Code</h2>\r\n                    <img src=\"${qrCodeUrl}\" alt=\"Product QR Code\" class=\"qr-code-image\"/>\r\n                    <div class=\"product-details\">\r\n                      <p><strong>Product ID:</strong> ${details.productId}</p>\r\n                      <p><strong>Name:</strong> ${details.name}</p>\r\n                      <p><strong>Manufacturer:</strong> ${details.manufacturer}</p>\r\n                      <p><strong>Production Date:</strong> ${details.productionDate}</p>\r\n                    </div>\r\n                  </div>\r\n                  <script>\r\n                    window.onload = () => {\r\n                      window.print();\r\n                    };\r\n                  </script>\r\n                  <div class=\"print-container\">\r\n                    <h2>Product QR Code</h2>\r\n                    <img src=\"${qrCodeUrl}\" alt=\"Product QR Code\" />\r\n                    <div class=\"product-details\">\r\n                      <p><strong>Product ID:</strong> ${details.productId}</p>\r\n                      <p><strong>Name:</strong> ${details.name}</p>\r\n                      <p><strong>Manufacturer:</strong> ${details.manufacturer}</p>\r\n                      <p><strong>Production Date:</strong> ${details.productionDate}</p>\r\n                    </div>\r\n                  </div>\r\n                </body>\r\n              </html>\r\n            `);\r\n            setTimeout(() => {\r\n              printWindow.print();\r\n              printWindow.close();\r\n            }, 500);\r\n          }}>Print QR Code</button>\r\n        </div>\r\n      )}\r\n\r\n      {products.length > 0 && (\r\n        <div className=\"products-list\">\r\n           <h3>Registered Products</h3>\r\n          <table className=\"products-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product ID</th>\r\n                <th>Name</th>\r\n                <th>Manufacturer</th>\r\n                <th>Production Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product.id}>\r\n                  <td>{product.id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.manufacturer}</td>\r\n                  <td>{product.productionDate}</td>\r\n                  <td>\r\n                    <button onClick={() => handleEdit(product)} className=\"action-btn edit-btn\">Edit</button>\r\n                    <button onClick={() => handleDelete(product.id)} className=\"action-btn delete-btn\">Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}