{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TUMBA-COLLEGE\\\\Desktop\\\\fake product idetification\\\\src\\\\components\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport QRCode from 'qrcode.react';\nimport ProductVerification from '../artifacts/contracts/ProductVerification.sol/ProductVerification.json';\nimport './AdminPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [password, setPassword] = useState('');\n  const [formData, setFormData] = useState({\n    productId: '',\n    name: '',\n    manufacturer: '',\n    productionDate: ''\n  });\n  const [qrCode, setQrCode] = useState('');\n  const [status, setStatus] = useState('');\n  const [products, setProducts] = useState([]);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isContractReady, setIsContractReady] = useState(false);\n  const handlePasswordSubmit = e => {\n    e.preventDefault();\n    // In a real application, this should be a secure password and properly hashed\n    const correctPassword = 'admin123';\n    if (password === correctPassword) {\n      setIsAuthenticated(true);\n      setStatus('');\n    } else {\n      setStatus('Incorrect password');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  useEffect(() => {\n    const initializeEthers = async () => {\n      if (window.ethereum && isAuthenticated) {\n        setIsLoading(true);\n        try {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const provider = new ethers.BrowserProvider(window.ethereum);\n          const signer = await provider.getSigner();\n          const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n          const contract = new ethers.Contract(contractAddress, ProductVerification.abi, signer);\n\n          // Verify contract ABI and methods\n          if (!ProductVerification.abi.find(item => item.name === 'registerProduct' && item.type === 'function')) {\n            throw new Error('Contract ABI missing registerProduct function');\n          }\n\n          // Verify contract instance\n          const code = await provider.getCode(contractAddress);\n          if (code === '0x') {\n            throw new Error('Contract not deployed at specified address');\n          }\n          setProvider(provider);\n          setSigner(signer);\n          setContract(contract);\n          setIsContractReady(true);\n          await loadProducts(contract);\n        } catch (error) {\n          setStatus(`Error initializing: ${error.message}`);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    initializeEthers();\n  }, [isAuthenticated]);\n  const loadProducts = async contractInstance => {\n    try {\n      const [productIds, productDetails] = await contractInstance.getAllProducts();\n      const formattedProducts = productIds.map((id, index) => ({\n        id,\n        name: productDetails[index].name,\n        manufacturer: productDetails[index].manufacturer,\n        productionDate: new Date(Number(productDetails[index].productionDate) * 1000).toLocaleDateString(),\n        exists: productDetails[index].exists\n      })).filter(product => product.exists && product.name && product.manufacturer).filter(product => product.exists);\n      setProducts(formattedProducts);\n    } catch (error) {\n      setStatus(`Error loading products: ${error.message}`);\n    }\n  };\n  const handleDelete = async productId => {\n    try {\n      const tx = await contract.deleteProduct(productId);\n      await tx.wait();\n      await loadProducts(contract);\n      setStatus('Product deleted successfully!');\n    } catch (error) {\n      setStatus(`Error deleting product: ${error.message}`);\n    }\n  };\n  const handleEdit = product => {\n    setEditingProduct(product);\n    setFormData({\n      productId: product.id,\n      name: product.name,\n      manufacturer: product.manufacturer,\n      productionDate: new Date(product.productionDate).toISOString().split('T')[0]\n    });\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\n      const tx = await contract.updateProduct(formData.productId, formData.name, formData.manufacturer, timestamp);\n      await tx.wait();\n      setEditingProduct(null);\n      await loadProducts(contract);\n      setStatus('Product updated successfully!');\n      setFormData({\n        productId: '',\n        name: '',\n        manufacturer: '',\n        productionDate: ''\n      });\n    } catch (error) {\n      setStatus(`Error updating product: ${error.message}`);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus('');\n    setIsLoading(true);\n    try {\n      if (!window.ethereum) {\n        throw new Error('Please install MetaMask to use this feature');\n      }\n      if (!contract) {\n        throw new Error('Contract not initialized');\n      }\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\n      setStatus('Registering product...');\n      const tx = await contract.registerProduct(formData.productId, formData.name, formData.manufacturer, timestamp);\n      setStatus('Waiting for transaction confirmation...');\n      const receipt = await tx.wait();\n      if (receipt.status === 1) {\n        const qrCodeData = JSON.stringify({\n          productId: formData.productId,\n          name: formData.name,\n          manufacturer: formData.manufacturer,\n          productionDate: formData.productionDate\n        });\n        setQrCode(qrCodeData);\n        setStatus('Loading updated product list...');\n        await loadProducts(contract);\n        setStatus('Product registered successfully!');\n        setFormData({\n          productId: '',\n          name: '',\n          manufacturer: '',\n          productionDate: ''\n        });\n      } else {\n        throw new Error('Transaction failed');\n      }\n    } catch (error) {\n      // Extract the revert reason from the error\n      const errorMessage = error.message.includes('Product ID already exists') ? 'A product with this ID already exists. Please use a different Product ID.' : `Error: ${error.message}`;\n      setStatus(errorMessage);\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePasswordSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register New Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), !isContractReady ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to register products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message loading-message\",\n        children: \"Processing transaction...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status-message\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editingProduct ? handleUpdate : handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"productId\",\n              value: formData.productId,\n              onChange: handleInputChange,\n              required: true,\n              disabled: editingProduct || !isContractReady\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Manufacturer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"manufacturer\",\n              value: formData.manufacturer,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Production Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"productionDate\",\n              value: formData.productionDate,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isContractReady,\n            children: editingProduct ? 'Update Product' : 'Register Product'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 16\n    }, this), qrCode && !editingProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-code-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrCode,\n        size: 256,\n        level: \"H\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-details\",\n        children: (() => {\n          const details = JSON.parse(qrCode);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Product ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 22\n              }, this), \" \", details.productId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 22\n              }, this), \" \", details.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Manufacturer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 22\n              }, this), \" \", details.manufacturer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Production Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 22\n              }, this), \" \", details.productionDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const qrCodeCanvas = document.querySelector('.qr-code-section canvas');\n          const qrCodeUrl = qrCodeCanvas.toDataURL('image/png');\n          const printWindow = window.open('', '_blank');\n          printWindow.document.write(`\n              <html>\n                <head>\n                  <title>Print QR Code</title>\n                  <style>\n                    body { display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; }\n                    .print-container { text-align: center; }\n                    img { max-width: 256px; }\n                    .product-details { margin-top: 20px; }\n                    @media print {\n                      body { -webkit-print-color-adjust: exact; }\n                    }\n                  </style>\n                </head>\n                <body>\n                  <div class=\"print-container\">\n                    <h2>Product QR Code</h2>\n                    <img src=\"${qrCodeUrl}\" alt=\"Product QR Code\" />\n                    <div class=\"product-details\">\n                      <p><strong>Product ID:</strong> ${details.productId}</p>\n                      <p><strong>Name:</strong> ${details.name}</p>\n                      <p><strong>Manufacturer:</strong> ${details.manufacturer}</p>\n                      <p><strong>Production Date:</strong> ${details.productionDate}</p>\n                    </div>\n                  </div>\n                </body>\n              </html>\n            `);\n          setTimeout(() => {\n            printWindow.print();\n            printWindow.close();\n          }, 500);\n        },\n        children: \"Print QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), products.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registered Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"products-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Manufacturer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Production Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.manufacturer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.productionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(product),\n                className: \"action-btn edit-btn\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(product.id),\n                className: \"action-btn delete-btn\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"kLbdjB+gWIRrT19q6rlW/Rn6lNQ=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","ethers","QRCode","ProductVerification","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","isAuthenticated","setIsAuthenticated","password","setPassword","formData","setFormData","productId","name","manufacturer","productionDate","qrCode","setQrCode","status","setStatus","products","setProducts","editingProduct","setEditingProduct","contract","setContract","provider","setProvider","signer","setSigner","isLoading","setIsLoading","isContractReady","setIsContractReady","handlePasswordSubmit","e","preventDefault","correctPassword","handleInputChange","value","target","prevState","initializeEthers","window","ethereum","request","method","BrowserProvider","getSigner","contractAddress","Contract","abi","find","item","type","Error","code","getCode","loadProducts","error","message","contractInstance","productIds","productDetails","getAllProducts","formattedProducts","map","id","index","Date","Number","toLocaleDateString","exists","filter","product","handleDelete","tx","deleteProduct","wait","handleEdit","toISOString","split","handleUpdate","timestamp","Math","floor","getTime","updateProduct","handleSubmit","registerProduct","receipt","qrCodeData","JSON","stringify","errorMessage","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","disabled","size","level","details","parse","onClick","qrCodeCanvas","document","querySelector","qrCodeUrl","toDataURL","printWindow","open","write","setTimeout","print","close","length","_c","$RefreshReg$"],"sources":["C:/Users/TUMBA-COLLEGE/Desktop/fake product idetification/src/components/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport QRCode from 'qrcode.react';\r\nimport ProductVerification from '../artifacts/contracts/ProductVerification.sol/ProductVerification.json';\r\nimport './AdminPage.css';\r\n\r\nfunction AdminPage() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    productId: '',\r\n    name: '',\r\n    manufacturer: '',\r\n    productionDate: ''\r\n  });\r\n  const [qrCode, setQrCode] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [editingProduct, setEditingProduct] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n  const [isContractReady, setIsContractReady] = useState(false);\r\n\r\n  const handlePasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    // In a real application, this should be a secure password and properly hashed\r\n    const correctPassword = 'admin123';\r\n    if (password === correctPassword) {\r\n      setIsAuthenticated(true);\r\n      setStatus('');\r\n    } else {\r\n      setStatus('Incorrect password');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeEthers = async () => {\r\n      if (window.ethereum && isAuthenticated) {\r\n        setIsLoading(true);\r\n        try {\r\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n          const provider = new ethers.BrowserProvider(window.ethereum);\r\n          const signer = await provider.getSigner();\r\n          const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\r\n          const contract = new ethers.Contract(\r\n            contractAddress,\r\n            ProductVerification.abi,\r\n            signer\r\n          );\r\n          \r\n          // Verify contract ABI and methods\r\n          if (!ProductVerification.abi.find(item => item.name === 'registerProduct' && item.type === 'function')) {\r\n            throw new Error('Contract ABI missing registerProduct function');\r\n          }\r\n          \r\n          // Verify contract instance\r\n          const code = await provider.getCode(contractAddress);\r\n          if (code === '0x') {\r\n            throw new Error('Contract not deployed at specified address');\r\n          }\r\n          setProvider(provider);\r\n          setSigner(signer);\r\n          setContract(contract);\r\n          setIsContractReady(true);\r\n          await loadProducts(contract);\r\n        } catch (error) {\r\n          setStatus(`Error initializing: ${error.message}`);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n    initializeEthers();\r\n  }, [isAuthenticated]);\r\n\r\n  const loadProducts = async (contractInstance) => {\r\n    try {\r\n      const [productIds, productDetails] = await contractInstance.getAllProducts();\r\n      const formattedProducts = productIds\r\n        .map((id, index) => ({\r\n          id,\r\n          name: productDetails[index].name,\r\n          manufacturer: productDetails[index].manufacturer,\r\n          productionDate: new Date(Number(productDetails[index].productionDate) * 1000).toLocaleDateString(),\r\n          exists: productDetails[index].exists\r\n        }))\r\n        .filter(product => product.exists && product.name && product.manufacturer)\r\n        .filter(product => product.exists);\r\n      setProducts(formattedProducts);\r\n    } catch (error) {\r\n      setStatus(`Error loading products: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (productId) => {\r\n    try {\r\n      const tx = await contract.deleteProduct(productId);\r\n      await tx.wait();\r\n      await loadProducts(contract);\r\n      setStatus('Product deleted successfully!');\r\n    } catch (error) {\r\n      setStatus(`Error deleting product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (product) => {\r\n    setEditingProduct(product);\r\n    setFormData({\r\n      productId: product.id,\r\n      name: product.name,\r\n      manufacturer: product.manufacturer,\r\n      productionDate: new Date(product.productionDate).toISOString().split('T')[0]\r\n    });\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\r\n      const tx = await contract.updateProduct(\r\n        formData.productId,\r\n        formData.name,\r\n        formData.manufacturer,\r\n        timestamp\r\n      );\r\n      await tx.wait();\r\n      setEditingProduct(null);\r\n      await loadProducts(contract);\r\n      setStatus('Product updated successfully!');\r\n      setFormData({\r\n        productId: '',\r\n        name: '',\r\n        manufacturer: '',\r\n        productionDate: ''\r\n      });\r\n    } catch (error) {\r\n      setStatus(`Error updating product: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus('');\r\n    setIsLoading(true);\r\n    try {\r\n      if (!window.ethereum) {\r\n        throw new Error('Please install MetaMask to use this feature');\r\n      }\r\n\r\n      if (!contract) {\r\n        throw new Error('Contract not initialized');\r\n      }\r\n\r\n      const timestamp = Math.floor(new Date(formData.productionDate).getTime() / 1000);\r\n      \r\n      setStatus('Registering product...');\r\n      const tx = await contract.registerProduct(\r\n        formData.productId,\r\n        formData.name,\r\n        formData.manufacturer,\r\n        timestamp\r\n      );\r\n\r\n      setStatus('Waiting for transaction confirmation...');\r\n      const receipt = await tx.wait();\r\n      \r\n      if (receipt.status === 1) {\r\n        const qrCodeData = JSON.stringify({\r\n          productId: formData.productId,\r\n          name: formData.name,\r\n          manufacturer: formData.manufacturer,\r\n          productionDate: formData.productionDate\r\n        });\r\n        setQrCode(qrCodeData);\r\n        setStatus('Loading updated product list...');\r\n        await loadProducts(contract);\r\n        setStatus('Product registered successfully!');\r\n        setFormData({\r\n          productId: '',\r\n          name: '',\r\n          manufacturer: '',\r\n          productionDate: ''\r\n        });\r\n      } else {\r\n        throw new Error('Transaction failed');\r\n      }\r\n    } catch (error) {\r\n      // Extract the revert reason from the error\r\n      const errorMessage = error.message.includes('Product ID already exists') \r\n        ? 'A product with this ID already exists. Please use a different Product ID.'\r\n        : `Error: ${error.message}`;\r\n      setStatus(errorMessage);\r\n    }\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"admin-page\">\r\n        <h2>Admin Authentication</h2>\r\n        <form onSubmit={handlePasswordSubmit}>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        {status && <p className=\"status-message\">{status}</p>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-page\">\r\n      <h2>Register New Product</h2>\r\n      {!isContractReady ? (\r\n        <p>Please connect your wallet to register products</p>\r\n      ) : (\r\n        <div>\r\n          {isLoading && <p className=\"status-message loading-message\">Processing transaction...</p>}\r\n          {status && <p className=\"status-message\">{status}</p>}\r\n          <div className=\"product-form\">\r\n        <form onSubmit={editingProduct ? handleUpdate : handleSubmit}>\r\n          <div>\r\n            <label>Product ID:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"productId\"\r\n              value={formData.productId}\r\n              onChange={handleInputChange}\r\n              required\r\n              disabled={editingProduct || !isContractReady}\r\n            />\r\n          </div>\r\n        <div>\r\n          <label>Product Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Manufacturer:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"manufacturer\"\r\n            value={formData.manufacturer}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Production Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"productionDate\"\r\n            value={formData.productionDate}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" disabled={!isContractReady}>\r\n          {editingProduct ? 'Update Product' : 'Register Product'}\r\n        </button>\r\n      </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    {status && <p className=\"status-message\">{status}</p>}\r\n\r\n      {qrCode && !editingProduct && (\r\n        <div className=\"qr-code-section\">\r\n          <h3>Generated QR Code</h3>\r\n          <QRCode value={qrCode} size={256} level=\"H\" />\r\n          <div className=\"product-details\">\r\n            {(() => {\r\n              const details = JSON.parse(qrCode);\r\n              return (\r\n                <>\r\n                  <p><strong>Product ID:</strong> {details.productId}</p>\r\n                  <p><strong>Name:</strong> {details.name}</p>\r\n                  <p><strong>Manufacturer:</strong> {details.manufacturer}</p>\r\n                  <p><strong>Production Date:</strong> {details.productionDate}</p>\r\n                </>\r\n              );\r\n            })()}\r\n          </div>\r\n          <button onClick={() => {\r\n            const qrCodeCanvas = document.querySelector('.qr-code-section canvas');\r\n            const qrCodeUrl = qrCodeCanvas.toDataURL('image/png');\r\n            const printWindow = window.open('', '_blank');\r\n            printWindow.document.write(`\r\n              <html>\r\n                <head>\r\n                  <title>Print QR Code</title>\r\n                  <style>\r\n                    body { display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; }\r\n                    .print-container { text-align: center; }\r\n                    img { max-width: 256px; }\r\n                    .product-details { margin-top: 20px; }\r\n                    @media print {\r\n                      body { -webkit-print-color-adjust: exact; }\r\n                    }\r\n                  </style>\r\n                </head>\r\n                <body>\r\n                  <div class=\"print-container\">\r\n                    <h2>Product QR Code</h2>\r\n                    <img src=\"${qrCodeUrl}\" alt=\"Product QR Code\" />\r\n                    <div class=\"product-details\">\r\n                      <p><strong>Product ID:</strong> ${details.productId}</p>\r\n                      <p><strong>Name:</strong> ${details.name}</p>\r\n                      <p><strong>Manufacturer:</strong> ${details.manufacturer}</p>\r\n                      <p><strong>Production Date:</strong> ${details.productionDate}</p>\r\n                    </div>\r\n                  </div>\r\n                </body>\r\n              </html>\r\n            `);\r\n            setTimeout(() => {\r\n              printWindow.print();\r\n              printWindow.close();\r\n            }, 500);\r\n          }}>Print QR Code</button>\r\n        </div>\r\n      )}\r\n\r\n      {products.length > 0 && (\r\n        <div className=\"products-list\">\r\n           <h3>Registered Products</h3>\r\n          <table className=\"products-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product ID</th>\r\n                <th>Name</th>\r\n                <th>Manufacturer</th>\r\n                <th>Production Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product.id}>\r\n                  <td>{product.id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.manufacturer}</td>\r\n                  <td>{product.productionDate}</td>\r\n                  <td>\r\n                    <button onClick={() => handleEdit(product)} className=\"action-btn edit-btn\">Edit</button>\r\n                    <button onClick={() => handleDelete(product.id)} className=\"action-btn delete-btn\">Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,mBAAmB,MAAM,yEAAyE;AACzG,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE;EAClB,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAM,CAACqC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMuC,oBAAoB,GAAIC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,eAAe,GAAG,UAAU;IAClC,IAAI7B,QAAQ,KAAK6B,eAAe,EAAE;MAChC9B,kBAAkB,CAAC,IAAI,CAAC;MACxBY,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,MAAM;MACLA,SAAS,CAAC,oBAAoB,CAAC;IACjC;EACF,CAAC;EAED,MAAMmB,iBAAiB,GAAIH,CAAC,IAAK;IAC/B,MAAM;MAAEtB,IAAI;MAAE0B;IAAM,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAChC7B,WAAW,CAAC8B,SAAS,KAAK;MACxB,GAAGA,SAAS;MACZ,CAAC5B,IAAI,GAAG0B;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED3C,SAAS,CAAC,MAAM;IACd,MAAM8C,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAIC,MAAM,CAACC,QAAQ,IAAItC,eAAe,EAAE;QACtCyB,YAAY,CAAC,IAAI,CAAC;QAClB,IAAI;UACF,MAAMY,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAsB,CAAC,CAAC;UAChE,MAAMpB,QAAQ,GAAG,IAAI7B,MAAM,CAACkD,eAAe,CAACJ,MAAM,CAACC,QAAQ,CAAC;UAC5D,MAAMhB,MAAM,GAAG,MAAMF,QAAQ,CAACsB,SAAS,CAAC,CAAC;UACzC,MAAMC,eAAe,GAAG,4CAA4C;UACpE,MAAMzB,QAAQ,GAAG,IAAI3B,MAAM,CAACqD,QAAQ,CAClCD,eAAe,EACflD,mBAAmB,CAACoD,GAAG,EACvBvB,MACF,CAAC;;UAED;UACA,IAAI,CAAC7B,mBAAmB,CAACoD,GAAG,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACxC,IAAI,KAAK,iBAAiB,IAAIwC,IAAI,CAACC,IAAI,KAAK,UAAU,CAAC,EAAE;YACtG,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;UAClE;;UAEA;UACA,MAAMC,IAAI,GAAG,MAAM9B,QAAQ,CAAC+B,OAAO,CAACR,eAAe,CAAC;UACpD,IAAIO,IAAI,KAAK,IAAI,EAAE;YACjB,MAAM,IAAID,KAAK,CAAC,4CAA4C,CAAC;UAC/D;UACA5B,WAAW,CAACD,QAAQ,CAAC;UACrBG,SAAS,CAACD,MAAM,CAAC;UACjBH,WAAW,CAACD,QAAQ,CAAC;UACrBS,kBAAkB,CAAC,IAAI,CAAC;UACxB,MAAMyB,YAAY,CAAClC,QAAQ,CAAC;QAC9B,CAAC,CAAC,OAAOmC,KAAK,EAAE;UACdxC,SAAS,CAAC,uBAAuBwC,KAAK,CAACC,OAAO,EAAE,CAAC;QACnD,CAAC,SAAS;UACR7B,YAAY,CAAC,KAAK,CAAC;QACrB;MACF;IACF,CAAC;IACDW,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACpC,eAAe,CAAC,CAAC;EAErB,MAAMoD,YAAY,GAAG,MAAOG,gBAAgB,IAAK;IAC/C,IAAI;MACF,MAAM,CAACC,UAAU,EAAEC,cAAc,CAAC,GAAG,MAAMF,gBAAgB,CAACG,cAAc,CAAC,CAAC;MAC5E,MAAMC,iBAAiB,GAAGH,UAAU,CACjCI,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,MAAM;QACnBD,EAAE;QACFtD,IAAI,EAAEkD,cAAc,CAACK,KAAK,CAAC,CAACvD,IAAI;QAChCC,YAAY,EAAEiD,cAAc,CAACK,KAAK,CAAC,CAACtD,YAAY;QAChDC,cAAc,EAAE,IAAIsD,IAAI,CAACC,MAAM,CAACP,cAAc,CAACK,KAAK,CAAC,CAACrD,cAAc,CAAC,GAAG,IAAI,CAAC,CAACwD,kBAAkB,CAAC,CAAC;QAClGC,MAAM,EAAET,cAAc,CAACK,KAAK,CAAC,CAACI;MAChC,CAAC,CAAC,CAAC,CACFC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACF,MAAM,IAAIE,OAAO,CAAC7D,IAAI,IAAI6D,OAAO,CAAC5D,YAAY,CAAC,CACzE2D,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACF,MAAM,CAAC;MACpCnD,WAAW,CAAC4C,iBAAiB,CAAC;IAChC,CAAC,CAAC,OAAON,KAAK,EAAE;MACdxC,SAAS,CAAC,2BAA2BwC,KAAK,CAACC,OAAO,EAAE,CAAC;IACvD;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,MAAO/D,SAAS,IAAK;IACxC,IAAI;MACF,MAAMgE,EAAE,GAAG,MAAMpD,QAAQ,CAACqD,aAAa,CAACjE,SAAS,CAAC;MAClD,MAAMgE,EAAE,CAACE,IAAI,CAAC,CAAC;MACf,MAAMpB,YAAY,CAAClC,QAAQ,CAAC;MAC5BL,SAAS,CAAC,+BAA+B,CAAC;IAC5C,CAAC,CAAC,OAAOwC,KAAK,EAAE;MACdxC,SAAS,CAAC,2BAA2BwC,KAAK,CAACC,OAAO,EAAE,CAAC;IACvD;EACF,CAAC;EAED,MAAMmB,UAAU,GAAIL,OAAO,IAAK;IAC9BnD,iBAAiB,CAACmD,OAAO,CAAC;IAC1B/D,WAAW,CAAC;MACVC,SAAS,EAAE8D,OAAO,CAACP,EAAE;MACrBtD,IAAI,EAAE6D,OAAO,CAAC7D,IAAI;MAClBC,YAAY,EAAE4D,OAAO,CAAC5D,YAAY;MAClCC,cAAc,EAAE,IAAIsD,IAAI,CAACK,OAAO,CAAC3D,cAAc,CAAC,CAACiE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7E,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAO/C,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM+C,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAIhB,IAAI,CAAC3D,QAAQ,CAACK,cAAc,CAAC,CAACuE,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;MAChF,MAAMV,EAAE,GAAG,MAAMpD,QAAQ,CAAC+D,aAAa,CACrC7E,QAAQ,CAACE,SAAS,EAClBF,QAAQ,CAACG,IAAI,EACbH,QAAQ,CAACI,YAAY,EACrBqE,SACF,CAAC;MACD,MAAMP,EAAE,CAACE,IAAI,CAAC,CAAC;MACfvD,iBAAiB,CAAC,IAAI,CAAC;MACvB,MAAMmC,YAAY,CAAClC,QAAQ,CAAC;MAC5BL,SAAS,CAAC,+BAA+B,CAAC;MAC1CR,WAAW,CAAC;QACVC,SAAS,EAAE,EAAE;QACbC,IAAI,EAAE,EAAE;QACRC,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO4C,KAAK,EAAE;MACdxC,SAAS,CAAC,2BAA2BwC,KAAK,CAACC,OAAO,EAAE,CAAC;IACvD;EACF,CAAC;EAED,MAAM4B,YAAY,GAAG,MAAOrD,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBjB,SAAS,CAAC,EAAE,CAAC;IACbY,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,IAAI,CAACY,MAAM,CAACC,QAAQ,EAAE;QACpB,MAAM,IAAIW,KAAK,CAAC,6CAA6C,CAAC;MAChE;MAEA,IAAI,CAAC/B,QAAQ,EAAE;QACb,MAAM,IAAI+B,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,MAAM4B,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAIhB,IAAI,CAAC3D,QAAQ,CAACK,cAAc,CAAC,CAACuE,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;MAEhFnE,SAAS,CAAC,wBAAwB,CAAC;MACnC,MAAMyD,EAAE,GAAG,MAAMpD,QAAQ,CAACiE,eAAe,CACvC/E,QAAQ,CAACE,SAAS,EAClBF,QAAQ,CAACG,IAAI,EACbH,QAAQ,CAACI,YAAY,EACrBqE,SACF,CAAC;MAEDhE,SAAS,CAAC,yCAAyC,CAAC;MACpD,MAAMuE,OAAO,GAAG,MAAMd,EAAE,CAACE,IAAI,CAAC,CAAC;MAE/B,IAAIY,OAAO,CAACxE,MAAM,KAAK,CAAC,EAAE;QACxB,MAAMyE,UAAU,GAAGC,IAAI,CAACC,SAAS,CAAC;UAChCjF,SAAS,EAAEF,QAAQ,CAACE,SAAS;UAC7BC,IAAI,EAAEH,QAAQ,CAACG,IAAI;UACnBC,YAAY,EAAEJ,QAAQ,CAACI,YAAY;UACnCC,cAAc,EAAEL,QAAQ,CAACK;QAC3B,CAAC,CAAC;QACFE,SAAS,CAAC0E,UAAU,CAAC;QACrBxE,SAAS,CAAC,iCAAiC,CAAC;QAC5C,MAAMuC,YAAY,CAAClC,QAAQ,CAAC;QAC5BL,SAAS,CAAC,kCAAkC,CAAC;QAC7CR,WAAW,CAAC;UACVC,SAAS,EAAE,EAAE;UACbC,IAAI,EAAE,EAAE;UACRC,YAAY,EAAE,EAAE;UAChBC,cAAc,EAAE;QAClB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAM,IAAIwC,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACA,MAAMmC,YAAY,GAAGnC,KAAK,CAACC,OAAO,CAACmC,QAAQ,CAAC,2BAA2B,CAAC,GACpE,2EAA2E,GAC3E,UAAUpC,KAAK,CAACC,OAAO,EAAE;MAC7BzC,SAAS,CAAC2E,YAAY,CAAC;IACzB;EACF,CAAC;EAED,IAAI,CAACxF,eAAe,EAAE;IACpB,oBACEL,OAAA;MAAK+F,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBhG,OAAA;QAAAgG,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BpG,OAAA;QAAMqG,QAAQ,EAAEpE,oBAAqB;QAAA+D,QAAA,gBACnChG,OAAA;UAAAgG,QAAA,gBACEhG,OAAA;YAAAgG,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxBpG,OAAA;YACEqD,IAAI,EAAC,UAAU;YACff,KAAK,EAAE/B,QAAS;YAChB+F,QAAQ,EAAGpE,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACK,MAAM,CAACD,KAAK,CAAE;YAC7CiE,QAAQ;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNpG,OAAA;UAAQqD,IAAI,EAAC,QAAQ;UAAA2C,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,EACNnF,MAAM,iBAAIjB,OAAA;QAAG+F,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAE/E;MAAM;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAEV;EAEA,oBACEpG,OAAA;IAAK+F,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBhG,OAAA;MAAAgG,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5B,CAACrE,eAAe,gBACf/B,OAAA;MAAAgG,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtDpG,OAAA;MAAAgG,QAAA,GACGnE,SAAS,iBAAI7B,OAAA;QAAG+F,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACxFnF,MAAM,iBAAIjB,OAAA;QAAG+F,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAE/E;MAAM;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDpG,OAAA;QAAK+F,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC/BhG,OAAA;UAAMqG,QAAQ,EAAEhF,cAAc,GAAG4D,YAAY,GAAGM,YAAa;UAAAS,QAAA,gBAC3DhG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAO;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1BpG,OAAA;cACEqD,IAAI,EAAC,MAAM;cACXzC,IAAI,EAAC,WAAW;cAChB0B,KAAK,EAAE7B,QAAQ,CAACE,SAAU;cAC1B2F,QAAQ,EAAEjE,iBAAkB;cAC5BkE,QAAQ;cACRC,QAAQ,EAAEnF,cAAc,IAAI,CAACU;YAAgB;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACRpG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAO;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5BpG,OAAA;cACEqD,IAAI,EAAC,MAAM;cACXzC,IAAI,EAAC,MAAM;cACX0B,KAAK,EAAE7B,QAAQ,CAACG,IAAK;cACrB0F,QAAQ,EAAEjE,iBAAkB;cAC5BkE,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNpG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAO;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5BpG,OAAA;cACEqD,IAAI,EAAC,MAAM;cACXzC,IAAI,EAAC,cAAc;cACnB0B,KAAK,EAAE7B,QAAQ,CAACI,YAAa;cAC7ByF,QAAQ,EAAEjE,iBAAkB;cAC5BkE,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNpG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAO;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/BpG,OAAA;cACEqD,IAAI,EAAC,MAAM;cACXzC,IAAI,EAAC,gBAAgB;cACrB0B,KAAK,EAAE7B,QAAQ,CAACK,cAAe;cAC/BwF,QAAQ,EAAEjE,iBAAkB;cAC5BkE,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNpG,OAAA;YAAQqD,IAAI,EAAC,QAAQ;YAACmD,QAAQ,EAAE,CAACzE,eAAgB;YAAAiE,QAAA,EAC9C3E,cAAc,GAAG,gBAAgB,GAAG;UAAkB;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EACFnF,MAAM,iBAAIjB,OAAA;MAAG+F,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAE/E;IAAM;MAAAgF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAElDrF,MAAM,IAAI,CAACM,cAAc,iBACxBrB,OAAA;MAAK+F,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BhG,OAAA;QAAAgG,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BpG,OAAA,CAACH,MAAM;QAACyC,KAAK,EAAEvB,MAAO;QAAC0F,IAAI,EAAE,GAAI;QAACC,KAAK,EAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9CpG,OAAA;QAAK+F,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7B,CAAC,MAAM;UACN,MAAMW,OAAO,GAAGhB,IAAI,CAACiB,KAAK,CAAC7F,MAAM,CAAC;UAClC,oBACEf,OAAA,CAAAE,SAAA;YAAA8F,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,gBAAGhG,OAAA;gBAAAgG,QAAA,EAAQ;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACO,OAAO,CAAChG,SAAS;YAAA;cAAAsF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvDpG,OAAA;cAAAgG,QAAA,gBAAGhG,OAAA;gBAAAgG,QAAA,EAAQ;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACO,OAAO,CAAC/F,IAAI;YAAA;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5CpG,OAAA;cAAAgG,QAAA,gBAAGhG,OAAA;gBAAAgG,QAAA,EAAQ;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACO,OAAO,CAAC9F,YAAY;YAAA;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5DpG,OAAA;cAAAgG,QAAA,gBAAGhG,OAAA;gBAAAgG,QAAA,EAAQ;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACO,OAAO,CAAC7F,cAAc;YAAA;cAAAmF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,eACjE,CAAC;QAEP,CAAC,EAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNpG,OAAA;QAAQ6G,OAAO,EAAEA,CAAA,KAAM;UACrB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,yBAAyB,CAAC;UACtE,MAAMC,SAAS,GAAGH,YAAY,CAACI,SAAS,CAAC,WAAW,CAAC;UACrD,MAAMC,WAAW,GAAGzE,MAAM,CAAC0E,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC;UAC7CD,WAAW,CAACJ,QAAQ,CAACM,KAAK,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgCJ,SAAS;AACzC;AACA,wDAAwDN,OAAO,CAAChG,SAAS;AACzE,kDAAkDgG,OAAO,CAAC/F,IAAI;AAC9D,0DAA0D+F,OAAO,CAAC9F,YAAY;AAC9E,6DAA6D8F,OAAO,CAAC7F,cAAc;AACnF;AACA;AACA;AACA;AACA,aAAa,CAAC;UACFwG,UAAU,CAAC,MAAM;YACfH,WAAW,CAACI,KAAK,CAAC,CAAC;YACnBJ,WAAW,CAACK,KAAK,CAAC,CAAC;UACrB,CAAC,EAAE,GAAG,CAAC;QACT,CAAE;QAAAxB,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACN,EAEAjF,QAAQ,CAACsG,MAAM,GAAG,CAAC,iBAClBzH,OAAA;MAAK+F,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC3BhG,OAAA;QAAAgG,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BpG,OAAA;QAAO+F,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC/BhG,OAAA;UAAAgG,QAAA,eACEhG,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBpG,OAAA;cAAAgG,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbpG,OAAA;cAAAgG,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrBpG,OAAA;cAAAgG,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBpG,OAAA;cAAAgG,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpG,OAAA;UAAAgG,QAAA,EACG7E,QAAQ,CAAC8C,GAAG,CAAEQ,OAAO,iBACpBzE,OAAA;YAAAgG,QAAA,gBACEhG,OAAA;cAAAgG,QAAA,EAAKvB,OAAO,CAACP;YAAE;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBpG,OAAA;cAAAgG,QAAA,EAAKvB,OAAO,CAAC7D;YAAI;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBpG,OAAA;cAAAgG,QAAA,EAAKvB,OAAO,CAAC5D;YAAY;cAAAoF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/BpG,OAAA;cAAAgG,QAAA,EAAKvB,OAAO,CAAC3D;YAAc;cAAAmF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjCpG,OAAA;cAAAgG,QAAA,gBACEhG,OAAA;gBAAQ6G,OAAO,EAAEA,CAAA,KAAM/B,UAAU,CAACL,OAAO,CAAE;gBAACsB,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzFpG,OAAA;gBAAQ6G,OAAO,EAAEA,CAAA,KAAMnC,YAAY,CAACD,OAAO,CAACP,EAAE,CAAE;gBAAC6B,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChG,CAAC;UAAA,GARE3B,OAAO,CAACP,EAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASf,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChG,EAAA,CAlXQD,SAAS;AAAAuH,EAAA,GAATvH,SAAS;AAoXlB,eAAeA,SAAS;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}